---
name: ft-transcendence

services:
    caddy:
        build: "./caddy/"
        container_name: caddy
        restart: unless-stopped
        ports:
            - "${HTTP_PORT:-8080}:8080"
            - "${HTTPS_PORT:-8443}:8443"
        networks:
            ft-transcendence-net:
                ipv4_address: &caddy-ip 10.42.42.1
        volumes:
            - "caddy-data:/frontend/.local/share/caddy/"
            - "./.secrets/caddy_vault_token:/run/secrets/caddy_vault_token"

            - "frontend:/frontend/dist/:ro"
            - "user-upload:/frontend/uploads/:ro"
        environment:
            - WATCH
            - VAULT_API_PORT
            - DOMAINS
            - HTTP_DOMAINS
            - HTTPS_DOMAINS
            - CADDY_EXTRA_GLOBAL_DIRECTIVES
            - CADDY_EXTRA_SITE_DIRECTIVES
        depends_on:
            frontend:
                condition: service_started
            backend:
                condition: service_started
            vault:
                restart: true
                condition: service_healthy
        develop:
            watch:
                - path: "./caddy/Caddyfile"
                  action: sync
                  target: "/etc/caddy/Caddyfile"

    frontend:
        build: "./frontend/"
        container_name: frontend
        restart: no
        ports:
            - "${LIVE_RELOAD_PORT:-35729}:${LIVE_RELOAD_PORT:-35729}"
        networks:
            ft-transcendence-net:
                ipv4_address: &frontend-ip 10.42.42.6
        environment:
            - WATCH
            - VAULT_API_PORT
        volumes:
            - "frontend:/frontend/dist/"
            - "./.secrets/frontend_vault_token:/run/secrets/frontend_vault_token"
        develop:
            watch:
                - path: "./frontend/"
                  action: sync # Might fail on MacOS when node_modules is touched, use `rebuild` as fallback
                  target: "/frontend/"
                - path: "./frontend/package.json"
                  action: rebuild
                  target: "/frontend/package.json"
                - path: "./frontend/esbuild.config.js"
                  action: rebuild
                  target: "/frontend/esbuild.config.js"
                - path: "./frontend/reload-server.js"
                  action: rebuild
                  target: "/frontend/reload-server.js"
        depends_on:
            backend:
                condition: service_healthy
            vault:
                restart: true
                condition: service_healthy

    backend:
        build: "./backend/"
        container_name: backend
        restart: no # cannot restart because of expiring vault token
        networks:
            ft-transcendence-net:
                ipv4_address: &backend-ip 10.42.42.2
        environment:
            - WATCH
            - VAULT_API_PORT
            - DOMAINS
            - BACKEND_PORT
        volumes:
            - "drizzle:/backend/drizzle/"
            - "user-upload:/backend/uploads/"
            - "./.secrets/backend_vault_token:/run/secrets/backend_vault_token"
        depends_on:
            vault:
                restart: true
                condition: service_healthy
            logstash:
                restart: true
                condition: service_healthy
                required: false
        develop:
            watch:
                - path: "./backend/"
                  action: sync # Might fail on MacOS when node_modules is touched, use `rebuild` as fallback
                  target: "/backend/"
                - path: "./backend/package.json"
                  action: rebuild
                  target: "/backend/package.json"
                - path: "./backend/esbuild.config.js"
                  action: rebuild
                  target: "/backend/esbuild.config.js"

    util-image:
        build: "./util-image/"
        container_name: util-image
        entrypoint: ["/curl", "--version"]

    elasticsearch:
        profiles: [elk]
        build: "./elk/elasticsearch/"
        container_name: elasticsearch
        volumes:
            - "elasticsearch-data:/usr/share/elasticsearch/data/"
            - "elasticsearch-certs:/usr/share/elasticsearch/config/certs/"
            - "./.secrets/elasticsearch_vault_token:/run/secrets/elasticsearch_vault_token"
        user: root # Run as root to ensure we can set permissions
        environment:
            - WATCH
            - VAULT_API_PORT
        networks:
            ft-transcendence-net:
                ipv4_address: &elasticsearch-ip 10.42.42.3
        depends_on:
            util-image:
                condition: service_started
            vault:
                restart: true
                condition: service_healthy
        restart: no # cannot restart because of expiring vault token

    logstash:
        profiles: [elk]
        build: "./elk/logstash/"
        container_name: logstash
        volumes:
            - "logstash-data:/usr/share/logstash/data/"
            - "elasticsearch-certs:/etc/logstash/config/certs/:ro"
            - "./.secrets/logstash_vault_token:/run/secrets/logstash_vault_token"
        environment:
            - WATCH
            - VAULT_API_PORT
            - LOGSTASH_API_PORT
        networks:
            ft-transcendence-net:
                ipv4_address: &logstash-ip 10.42.42.4
        depends_on:
            util-image:
                condition: service_started
            elasticsearch:
                condition: service_healthy
            vault:
                restart: true
                condition: service_healthy
        restart: no # cannot restart because of expiring vault token

    kibana:
        profiles: [elk]
        build: "./elk/kibana/"
        container_name: kibana
        ports:
            - "${KIBANA_PORT:-5601}:${KIBANA_PORT:-5601}"
        volumes:
            - "kibana-data:/usr/share/kibana/data/"
            - "./.secrets/kibana_vault_token:/run/secrets/kibana_vault_token"
        networks:
            ft-transcendence-net:
                ipv4_address: &kibana-ip 10.42.42.5
        environment:
            - WATCH
            - VAULT_API_PORT
            - KIBANA_PORT
        depends_on:
            util-image:
                condition: service_started
            elasticsearch:
                condition: service_healthy
            vault:
                restart: true
                condition: service_healthy
        restart: no # cannot restart because of expiring vault token

    vault:
        build:
            context: "./vault/"
            args:
                VAULT_API_PORT: "${VAULT_API_PORT:-8200}"
        container_name: vault
        restart: unless-stopped
        networks:
            ft-transcendence-net:
                ipv4_address: &vault_ip 10.42.42.42
        extra_hosts:
            backend: *backend-ip
            caddy: *caddy-ip
            frontend: *frontend-ip
            elasticsearch: *elasticsearch-ip
            logstash: *logstash-ip
            kibana: *kibana-ip
        cap_add:
            - IPC_LOCK
        volumes:
            - "vault-storage:/vault/file/"
            - "vault-secret:/vault/secret/"
            - "vault-logs:/vault/logs/"

            - "./.secrets/elasticsearch_vault_token:/run/secrets/elasticsearch_vault_token"
            - "./.secrets/logstash_vault_token:/run/secrets/logstash_vault_token"
            - "./.secrets/kibana_vault_token:/run/secrets/kibana_vault_token"
            - "./.secrets/caddy_vault_token:/run/secrets/caddy_vault_token"
            - "./.secrets/frontend_vault_token:/run/secrets/frontend_vault_token"
            - "./.secrets/backend_vault_token:/run/secrets/backend_vault_token"

            - "./env.json:/vault/config/env.json:ro"
        environment:
            - WATCH
            - VAULT_API_PORT
            - LOG_LEVEL
            - SAVE_UNSEAL_KEYS
            - SAVE_ROOT_TOKEN
        tty: true
        develop:
            watch:
                - path: "./vault/entrypoint.sh"
                  action: sync+restart
                  target: "/entrypoint.sh"
                - path: "./vault/replace_json_templates.py"
                  action: sync+restart
                  target: "/replace_json_templates.py"
                - path: "./vault/healthcheck.sh"
                  action: sync+restart
                  target: "/healthcheck.sh"
                - path: "./vault/config.hcl.template"
                  action: sync+restart
                  target: "/vault/config/config.hcl.template"
                - path: "./vault/policies/"
                  action: sync+restart
                  target: "/vault/policies/"

volumes:
    vault-logs:
    vault-secret:
    vault-storage:
    caddy-data:
    drizzle:
    user-upload:
    frontend:
    elasticsearch-data:
    elasticsearch-certs:
    logstash-data:
    kibana-data:

networks:
    ft-transcendence-net:
        enable_ipv6: false
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 10.42.42.0/24
                  ip_range: 10.42.42.0/24
                  gateway: 10.42.42.254
